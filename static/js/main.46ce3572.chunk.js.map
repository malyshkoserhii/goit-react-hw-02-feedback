{"version":3,"sources":["components/NotificationMessage/NotificationMessage.module.css","components/Statistics/Statistics.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/NotificationMessage/NotificationMessage.js","components/Statistics/Statistics.js","App.js","index.js","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","Section","title","children","className","s","section","sectionTitle","FeedbackOptions","options","onLeaveFeedback","wrapper","map","el","idx","feedbackBtn","onClick","protoTypes","PropTypes","arrayOf","string","func","isRequired","NotificationMessage","message","notification","Statistics","good","neutral","bad","total","positivePercentage","feedback","App","state","addFeedback","option","setState","countTotalFeedback","Object","values","reduce","value","countPositiveFeedbackPercentage","Math","round","totalAmount","this","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,aAAe,4C,uCCAjCD,EAAOC,QAAU,CAAC,SAAW,+B,gJCcdC,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,0BAASC,UAAWC,IAAEC,QAAtB,UACGJ,GAAS,oBAAIE,UAAWC,IAAEE,aAAjB,SAAgCL,IACzCC,M,gCCHCK,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,qBAAKN,UAAWC,IAAEM,QAAlB,SACGF,EAAQG,KAAI,SAACC,EAAIC,GAAL,OACX,8BACE,wBAAQV,UAAWC,IAAEU,YAAaC,QAAS,kBAAMN,EAAgBG,IAAjE,SACGA,KAFKC,SAUlBN,EAAgBS,WAAa,CAC3BR,QAASS,IAAUC,QAAQD,IAAUE,QACrCV,gBAAiBQ,IAAUG,KAAKC,YAGnBd,Q,iBCXAe,EARa,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAC1B,mBAAGpB,UAAWC,IAAEoB,aAAhB,SAA+BD,K,gBCmBlBE,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,gCACE,oBAAG3B,UAAWC,IAAE2B,SAAhB,mBAAiCL,KACjC,oBAAGvB,UAAWC,IAAE2B,SAAhB,sBAAoCJ,KACpC,oBAAGxB,UAAWC,IAAE2B,SAAhB,kBAAgCH,KAChC,oBAAGzB,UAAWC,IAAE2B,SAAhB,oBAAkCF,KAClC,oBAAG1B,UAAWC,IAAE2B,SAAhB,gCAA8CD,EAA9C,WCwDSE,E,4MA3DbC,MAAQ,CACNP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPM,YAAc,SAAAC,GACZ,EAAKC,SAAL,eACGD,EAAS,EAAKF,MAAME,GAAU,K,EAInCE,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKN,OAAOO,QAAO,SAACX,EAAOY,GAAR,OAAkBZ,EAAQY,M,EAGpEC,gCAAkC,SAAAb,GAAU,IAAD,EACV,EAAKI,MAA5BP,EADiC,EACjCA,KAAMC,EAD2B,EAC3BA,QAASC,EADkB,EAClBA,IAEvB,OAAIF,GAAQC,GAAWC,EAAM,EACpBe,KAAKC,MAAc,IAAPlB,EAAcG,GAG5B,G,uDAIP,IAAMgB,EAAcC,KAAKT,qBACnBP,EAAqBgB,KAAKJ,gCAC9BG,GAGF,OACE,qCACE,cAAC,EAAD,CAAS5C,MAAM,wBAAf,SACE,cAAC,EAAD,CACEO,QAAS8B,OAAOS,KAAKD,KAAKb,OAC1BxB,gBAAiBqC,KAAKZ,gBAI1B,cAAC,EAAD,CAASjC,MAAM,aAAf,SACmB,IAAhB4C,EACC,cAAC,EAAD,CAAqBtB,QAAQ,sBAE7B,cAAC,EAAD,CACEG,KAAMoB,KAAKb,MAAMP,KACjBC,QAASmB,KAAKb,MAAMN,QACpBC,IAAKkB,KAAKb,MAAML,IAChBC,MAAOgB,EACPf,mBAAoBA,a,GAnDhBkB,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BvD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,gC,kBCApED,EAAOC,QAAU,CAAC,QAAU,iCAAiC,YAAc,wC","file":"static/js/main.46ce3572.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"NotificationMessage_notification__kC9Fm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"Statistics_feedback__1pPmI\"};","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <section className={s.section}>\n    {title && <h2 className={s.sectionTitle}>{title}</h2>}\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div className={s.wrapper}>\n      {options.map((el, idx) => (\n        <div key={idx}>\n          <button className={s.feedbackBtn} onClick={() => onLeaveFeedback(el)}>\n            {el}\n          </button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.protoTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport s from './NotificationMessage.module.css';\n\nconst NotificationMessage = ({ message }) => (\n  <p className={s.notification}>{message}</p>\n);\n\nNotificationMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default NotificationMessage;\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div>\n      <p className={s.feedback}>good: {good}</p>\n      <p className={s.feedback}>neutral: {neutral}</p>\n      <p className={s.feedback}>bad: {bad}</p>\n      <p className={s.feedback}>total: {total}</p>\n      <p className={s.feedback}>positive feedback: {positivePercentage}%</p>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import { Component } from 'react';\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport NotificationMessage from './components/NotificationMessage';\nimport Statistics from './components/Statistics';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  addFeedback = option => {\n    this.setState({\n      [option]: this.state[option] + 1,\n    });\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((total, value) => total + value);\n  };\n\n  countPositiveFeedbackPercentage = total => {\n    const { good, neutral, bad } = this.state;\n\n    if (good || neutral || bad > 0) {\n      return Math.round((good * 100) / total);\n    }\n\n    return 0;\n  };\n\n  render() {\n    const totalAmount = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage(\n      totalAmount,\n    );\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.addFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {totalAmount === 0 ? (\n            <NotificationMessage message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={totalAmount}\n              positivePercentage={positivePercentage}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3Lu8M\",\"sectionTitle\":\"Section_sectionTitle__3NLD0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"FeedbackOptions_wrapper__1FWKS\",\"feedbackBtn\":\"FeedbackOptions_feedbackBtn__U8Vb2\"};"],"sourceRoot":""}